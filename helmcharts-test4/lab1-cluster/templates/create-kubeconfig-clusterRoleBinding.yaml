# Giving the necessary access to the ServiceAccounts to perform the Kubeconfig creation tasks

# create secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: create-secrets-crb
subjects:
- kind: ServiceAccount
  name: {{ .Values.serviceAccountName }}
  namespace: {{ .Values.project }}-{{ .Values.stage }}
roleRef:
  kind: ClusterRole
  name: create-secrets-cr
  apiGroup: "rbac.authorization.k8s.io"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: create-secrets-cr
rules:
- apiGroups: ["*"]
  resources: ["secrets"]
  verbs: ["create", "get", "watch", "list", "patch", "delete"]
---

# read serviceaccount
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: read-serviceaccounts-crb
subjects:
- kind: ServiceAccount
  name: {{ .Values.serviceAccountName }}
  namespace: {{ .Values.project }}-{{ .Values.stage }}
roleRef:
  kind: ClusterRole
  name: read-serviceaccounts-cr
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: read-serviceaccounts-cr
rules:
- apiGroups: ["*"]
  resources: ["serviceaccounts"]
  verbs: ["get", "list", "watch"]
---

# read pods
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: read-pod-crb
subjects:
- kind: ServiceAccount
  name: {{ .Values.serviceAccountName }}
  namespace: {{ .Values.project }}-{{ .Values.stage }}
roleRef:
  kind: ClusterRole
  name: read-pod-cr
  apiGroup: "rbac.authorization.k8s.io"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: read-pod-cr
rules:
- apiGroups: ["*"]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
